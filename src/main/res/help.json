{
  "STATUS": 400,
  "ID": "rolegroup",
  "POST": [
    {
      "PATH": "/rg/",
      "DESCRIPTION": "answers with a one use token for Authentication",
      "PARAMS": [
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: auth"
        },
        {
          "PARAM": "USER_TOKEN",
          "TYPE": "string",
          "VALUE": "the discord token of the user requesting the auth"
        }
      ],
      "RESULT": {
        "POSITION": "in field CONTENT of the response",
        "VALUES": [
          {
            "RESULT": "TOKEN",
            "TYPE": "string",
            "VALUE": "the authentication token"
          }
        ]
      }
    },{
      "PATH": "/rg/",
      "DESCRIPTION": "answers with a list of servers that the bot shares with the user",
      "PARAMS": [
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: server"
        },
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        }
      ],
      "RESULT": {
        "POSITION": "in field CONTENT of the response",
        "VALUES": [
          {
            "RESULT": "TOKEN",
            "TYPE": "string",
            "VALUE": "the authentication token"
          }
        ]
      }
    },
    {
      "PATH": "/rg/{server}",
      "DESCRIPTION": "add a modrole to server",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: add modrole"
        },
        {
          "PARAM": "ROLE_ID",
          "TYPE": "string",
          "VALUE": "the long Id of the role to add"
        }
      ]
    },
    {
      "PATH": "/rg/{server}",
      "DESCRIPTION": "remove a modrole from server",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: remove modrole"
        },
        {
          "PARAM": "ROLE_ID",
          "TYPE": "string",
          "VALUE": "the long Id of the role to remove"
        }
      ]
    },
    {
      "PATH": "/rg/{server}",
      "DESCRIPTION": "clear modroles of server",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: clear modrole"
        }
      ]
    },
    {
      "PATH": "/rg/{server}",
      "DESCRIPTION": "automatically add modroles to server",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: auto modrole"
        }
      ]
    },
    {
      "PATH": "/rg/{server}",
      "DESCRIPTION": "checks autorizations of the logged user",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: user"
        }
      ],
      "RESULT": {
        "POSITION": "in field CONTENT of the response",
        "VALUES": [
          {
            "NAME": "ALLOWED",
            "TYPE": "boolean",
            "VALUE": "if the user is allowed to interact with this server"
          },
          {
            "NAME": "MOD",
            "TYPE": "boolean",
            "VALUE": "if the user is a mod of this server"
          },
          {
            "NAME": "OWNER",
            "TYPE": "boolean",
            "VALUE": "if the user is an owner of the bot :smirk:"
          },
          {
            "NAME": "MEMBER",
            "TYPE": "boolean",
            "VALUE": "if the user is a member of this server"
          },
          {
            "NAME": "NAME",
            "TYPE": "string",
            "VALUE": "the current name of the user is it is a member, null otherwise"
          }
        ]
      }
    },
    {
      "PATH": "/rg/{server}/create",
      "DESCRIPTION": "checks autorizations of the logged user",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "NAME",
          "TYPE": "string",
          "VALUE": "the name of the new group"
        }
      ],
      "RESULT": {
        "POSITION": "in field CONTENT of the response",
        "VALUE": "the JSON representation of the newly created group ( as from a get on /rg/{server}/{group}), useful for get the ID"
      }
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "add a role to the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: add role"
        },
        {
          "PARAM": "ROLE_ID",
          "TYPE": "string",
          "VALUE": "the id of the role to add"
        },
        {
          "PARAM": "NICK",
          "TYPE": "string",
          "VALUE": "the nickname of the role entry"
        }
      ]
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "remove a role from the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: remove role"
        },
        {
          "PARAM": "NICK",
          "TYPE": "string",
          "VALUE": "the nickname of the role entry"
        }
      ]
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "remove all roles from the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: reset role"
        }
      ]
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "change the type of the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: type"
        },
        {
          "PARAM": "TYPE",
          "TYPE": "string",
          "VALUE": "the new type ( must be existing )"
        }
      ]
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "change the triggerExpression of the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: expression"
        },
        {
          "PARAM": "EXPRESSION",
          "TYPE": "string",
          "VALUE": "the new type ( must be existing )",
          "FORMAT": "a discord printable boolean expression with role mentions as variables ( roles must be in format <@&{ID}>)"
        }
      ]
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "enable the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: enable"
        }
      ]
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "disable the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: disable"
        }
      ]
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "delete the group",
      "PARAMS": [
        {
          "PARAM": "AUTH",
          "TYPE": "string",
          "VALUE": "the one use auth token generated by POST on /rg/"
        },
        {
          "PARAM": "ACTION",
          "TYPE": "string",
          "VALUE": "FIXED: delete"
        }
      ]
    }
  ],
  "GET": [
    {
      "PATH": "/rg/",
      "DESCRIPTION": "prints this help",
      "RETURN": {
        "DESCRIPTION": "a JSON file with help"
      }
    },
    {
      "PATH": "/rg/{server}",
      "DESCRIPTION": "retrives info about specified server",
      "RETURN": {
        "DESCRIPTION": "a JSON file with data about the server",
        "SUCCESS": [
          {
            "NAME": "STATUS",
            "TYPE": "integer",
            "VALUE": "200"
          },
          {
            "NAME": "ID",
            "TYPE": "string",
            "VALUE": "the name of the bot that processed the request"
          },
          {
            "NAME": "TYPE",
            "TYPE": "string",
            "VALUE": "FIXED: Guild"
          },
          {
            "NAME": "CONTENT",
            "TYPE": "JSONObject",
            "VALUE": {
              "FIELDS": [
                {
                  "NAME":"ID",
                  "TYPE":"string",
                  "VALUE":"the long id of this server"
                },{
                  "NAME":"NAME",
                  "TYPE":"string",
                  "VALUE":"the name of the server"
                },{
                  "NAME":"MODROLES",
                  "TYPE":"JSONArray",
                  "VALUE":"a list of the registered modroles"
                },{
                  "NAME":"ROLEGROUPS",
                  "TYPE":"JSONArray",
                  "VALUE":"a list of the registered groups"
                },{
                  "NAME":"ROLES",
                  "TYPE":"JSONArray",
                  "VALUE":"a list of this server roles"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "PATH": "/rg/{server}/{group}",
      "DESCRIPTION": "sends info about specified group",
      "RETURN": {
        "DESCRIPTION": "a JSON file with data about the server",
        "SUCCESS": [
          {
            "NAME": "STATUS",
            "TYPE": "integer",
            "VALUE": "200"
          },
          {
            "NAME": "ID",
            "TYPE": "string",
            "VALUE": "the name of the bot that processed the request"
          },
          {
            "NAME": "TYPE",
            "TYPE": "string",
            "VALUE": "FIXED: Group"
          },
          {
            "NAME": "CONTENT",
            "TYPE": "JSONObject",
            "VALUE": {
              "FIELDS": [
                {
                  "NAME":"ID",
                  "TYPE":"string",
                  "VALUE":"the long id of this group"
                },{
                  "NAME":"NAME",
                  "TYPE":"string",
                  "VALUE":"the name of the group"
                },{
                  "NAME":"ROLES",
                  "TYPE":"JSONArray",
                  "VALUE":"a list of the registered roles"
                },{
                  "NAME":"TYPE",
                  "TYPE":"string",
                  "VALUE":"the type of the group"
                },{
                  "NAME":"ENABLED",
                  "TYPE":"boolean"
                },{
                  "NAME":"EXPRESSION",
                  "TYPE":"JSONOBject",
                  "VALUE": [
                    {
                      "NAME":"TEXT",
                      "TYPE":"string",
                      "VALUE":"the textual part of the expression ( roles as $i )"
                    },
                    {
                      "NAME":"ROLES",
                      "TYPE":"JSONArray",
                      "VALUE":"the list of the associated roles with they relative string"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  ],
  "RETURN": {
    "DESCRIPTION": "if not specified in the prototype of the request all the responses are in this format",
    "SUCCESS": [
      {
        "NAME": "STATUS",
        "TYPE": "integer",
        "VALUE": "typically 200 but mainly all 2xx codes"
      },
      {
        "NAME": "ID",
        "TYPE": "string",
        "VALUE": "the name of the bot that processed the request"
      },
      {
        "NAME": "CONTENT",
        "TYPE": "string",
        "VALUE": "a small message from the bot ( mainly like the discord answer )"
      },
      {
        "NAME": "TYPE",
        "TYPE": "string",
        "VALUE": "what has been processed ( ACTION/RoleGroup/Guild )"
      }
    ],
    "ERROR": [
      {
        "NAME": "STATUS",
        "TYPE": "integer",
        "VALUE": "typically 4xx but also 5xx codes"
      },
      {
        "NAME": "ID",
        "TYPE": "string",
        "VALUE": "the name of the bot that processed the request"
      },
      {
        "NAME": "REASON",
        "TYPE": "string",
        "VALUE": "a small message of the error"
      }
    ]
  }
}